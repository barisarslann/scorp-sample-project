{"remainingRequest":"/Users/barisarslan/Desktop/scorp-project-copy/node_modules/babel-loader/lib/index.js!/Users/barisarslan/Desktop/scorp-project-copy/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/barisarslan/Desktop/scorp-project-copy/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/barisarslan/Desktop/scorp-project-copy/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/barisarslan/Desktop/scorp-project-copy/src/components/partials/Nav.vue?vue&type=template&id=06eab996","dependencies":[{"path":"/Users/barisarslan/Desktop/scorp-project-copy/src/components/partials/Nav.vue","mtime":1627892075997},{"path":"/Users/barisarslan/Desktop/scorp-project-copy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/barisarslan/Desktop/scorp-project-copy/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/barisarslan/Desktop/scorp-project-copy/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/barisarslan/Desktop/scorp-project-copy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/barisarslan/Desktop/scorp-project-copy/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdG9EaXNwbGF5U3RyaW5nIGFzIF90b0Rpc3BsYXlTdHJpbmcsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIGNyZWF0ZVRleHRWTm9kZSBhcyBfY3JlYXRlVGV4dFZOb2RlLCB3aXRoQ3R4IGFzIF93aXRoQ3R4LCB2TW9kZWxTZWxlY3QgYXMgX3ZNb2RlbFNlbGVjdCwgd2l0aERpcmVjdGl2ZXMgYXMgX3dpdGhEaXJlY3RpdmVzLCBGcmFnbWVudCBhcyBfRnJhZ21lbnQgfSBmcm9tICJ2dWUiOwoKdmFyIF9ob2lzdGVkXzEgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiSG9tZXBhZ2UiKTsKCnZhciBfaG9pc3RlZF8yID0gLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIkNvbnRhY3QgUGFnZSIpOwoKdmFyIF9ob2lzdGVkXzMgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiTXVsdGlzZWxlY3QiKTsKCnZhciBfaG9pc3RlZF80ID0gewogIGNsYXNzOiAibG9jYWxlLWNoYW5nZXIiCn07Cgp2YXIgX2hvaXN0ZWRfNSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoIm9wdGlvbiIsIHsKICB2YWx1ZTogImVuIgp9LCAiZW4iLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfNiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoIm9wdGlvbiIsIHsKICB2YWx1ZTogInRyIgp9LCAidHIiLCAtMQovKiBIT0lTVEVEICovCik7CgpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHZhciBfY29tcG9uZW50X0xvZ2luTW9kYWwgPSBfcmVzb2x2ZUNvbXBvbmVudCgiTG9naW5Nb2RhbCIpOwoKICB2YXIgX2NvbXBvbmVudF9yb3V0ZXJfbGluayA9IF9yZXNvbHZlQ29tcG9uZW50KCJyb3V0ZXItbGluayIpOwoKICB2YXIgX2NvbXBvbmVudF9yb3V0ZXJfdmlldyA9IF9yZXNvbHZlQ29tcG9uZW50KCJyb3V0ZXItdmlldyIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBbX2NyZWF0ZVZOb2RlKCJwIiwgbnVsbCwgX3RvRGlzcGxheVN0cmluZygkc2V0dXAubGFuZ3VhZ2VEYXRhLnRpdGxlKSwgMQogIC8qIFRFWFQgKi8KICApLCAkc2V0dXAuaXNPcGVuTW9kYWwgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9Mb2dpbk1vZGFsLCB7CiAgICBrZXk6IDAsCiAgICAib25TdGF0dXM6Y2xvc2UiOiAkb3B0aW9ucy5jaGFuZ2VMaXN0ZW5lcgogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJvblN0YXR1czpjbG9zZSJdKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X3JvdXRlcl9saW5rLCB7CiAgICB0bzogIi8iCiAgfSwgewogICAgZGVmYXVsdDogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gW19ob2lzdGVkXzFdOwogICAgfSksCiAgICBfOiAxCiAgICAvKiBTVEFCTEUgKi8KCiAgfSksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X3JvdXRlcl9saW5rLCB7CiAgICB0bzogIi9jb250YWN0IgogIH0sIHsKICAgIGRlZmF1bHQ6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFtfaG9pc3RlZF8yXTsKICAgIH0pLAogICAgXzogMQogICAgLyogU1RBQkxFICovCgogIH0pLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9yb3V0ZXJfbGluaywgewogICAgdG86ICIvbXVsdGkiCiAgfSwgewogICAgZGVmYXVsdDogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gW19ob2lzdGVkXzNdOwogICAgfSksCiAgICBfOiAxCiAgICAvKiBTVEFCTEUgKi8KCiAgfSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiA8c2VsZWN0IG5hbWU9XCJsYW5ndWFnZVwiIHYtbW9kZWw9XCJjdXJyZW50TGFuZ3VhZ2VcIj5cbiAgICAgICAgPG9wdGlvbiB2LWZvcj1cImxhbmcgb2YgbGFuZ3VhZ2VzXCIgOnZhbHVlPVwibGFuZ1wiIDprZXk9XCJsYW5nXCI+e3sgbGFuZyB9fTwvb3B0aW9uPlxuICAgIDwvc2VsZWN0PiAiKSwgX2NyZWF0ZVZOb2RlKCJidXR0b24iLCB7CiAgICBvbkNsaWNrOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRzZXR1cC5pc09wZW5Nb2RhbCA/ICRzZXR1cC5pc09wZW5Nb2RhbCA9IGZhbHNlIDogJHNldHVwLmlzT3Blbk1vZGFsID0gdHJ1ZTsKICAgIH0pCiAgfSwgIk9wZW4gTW9kYWwiKSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF80LCBbX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVWTm9kZSgic2VsZWN0IiwgewogICAgIm9uVXBkYXRlOm1vZGVsVmFsdWUiOiBfY2FjaGVbMl0gfHwgKF9jYWNoZVsyXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRzZXR1cC5sb2NhbGUgPSAkZXZlbnQ7CiAgICB9KQogIH0sIFtfaG9pc3RlZF81LCBfaG9pc3RlZF82XSwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICksIFtbX3ZNb2RlbFNlbGVjdCwgJHNldHVwLmxvY2FsZV1dKV0pLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9yb3V0ZXJfdmlldyldLCA2NAogIC8qIFNUQUJMRV9GUkFHTUVOVCAqLwogICk7Cn0="},{"version":3,"sources":["/Users/barisarslan/Desktop/scorp-project-copy/src/components/partials/Nav.vue"],"names":[],"mappings":";;8BACA,gBAAA,CAEwB,UAFxB,C;;8BAAA,gBAAA,CAG+B,cAH/B,C;;8BAAA,gBAAA,CAI6B,aAJ7B,C;;;AAWS,EAAA,KAAK,EAAC;;;8BAEb,YAAA,CAA8B,QAA9B,EAA8B;AAAtB,EAAA,KAAK,EAAC;AAAgB,CAA9B,EAAmB,IAAnB,EAAqB,CAAA;AAAA;AAArB,C;;8BACA,YAAA,CAA8B,QAA9B,EAA8B;AAAtB,EAAA,KAAK,EAAC;AAAgB,CAA9B,EAAmB,IAAnB,EAAqB,CAAA;AAAA;AAArB,C;;;;;;;;;uBAdF,YAAA,CAAA,SAAA,EAAA,IAAA,EAAA,CAAA,YAAA,CAA+B,GAA/B,EAA+B,IAA/B,EAA+B,gBAAA,CAAzB,MAAA,CAAA,YAAA,CAAa,KAAY,CAA/B,EAAwB;AAAA;AAAxB,GAAA,EACsB,MAAA,CAAA,W,kBAAlB,YAAA,CAAmE,qBAAnE,EAAmE;AADvE,IAAA,GAAA,EAAA,CACuE;AAA/B,sBAAc,QAAA,CAAA;AAAiB,GAAnE,E,IAAA,E;;AAAA,I,kBAAA,C,IADJ,mBAAA,CAAA,MAAA,EAAA,IAAA,CAAA,EAEI,YAAA,CAA0C,sBAA1C,EAA0C;AAA7B,IAAA,EAAE,EAAC;AAA0B,GAA1C,EAAmB;AAFvB,IAAA,OAAA,EAAA,QAAA,CAEwB;AAAA,aAAQ,CAFhC,UAEgC,CAAR;AAAA,KAFxB,CAEuB;AAFvB,IAAA,CAAA,EAAA;AAAA;;AAEuB,GAAnB,CAFJ,EAGI,YAAA,CAAqD,sBAArD,EAAqD;AAAxC,IAAA,EAAE,EAAC;AAAqC,GAArD,EAA0B;AAH9B,IAAA,OAAA,EAAA,QAAA,CAG+B;AAAA,aAAY,CAH3C,UAG2C,CAAZ;AAAA,KAH/B,CAG8B;AAH9B,IAAA,CAAA,EAAA;AAAA;;AAG8B,GAA1B,CAHJ,EAII,YAAA,CAAkD,sBAAlD,EAAkD;AAArC,IAAA,EAAE,EAAC;AAAkC,GAAlD,EAAwB;AAJ5B,IAAA,OAAA,EAAA,QAAA,CAI6B;AAAA,aAAW,CAJxC,UAIwC,CAAX;AAAA,KAJ7B,CAI4B;AAJ5B,IAAA,CAAA,EAAA;AAAA;;AAI4B,GAAxB,CAJJ,EAKI,mBAAA,CAAA,wKAAA,CALJ,EASI,YAAA,CAA2F,QAA3F,EAA2F;AAAlF,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,MAAA,CAAA,WAAA,GAAc,MAAA,CAAA,WAAA,GAAW,KAAzB,GAAoC,MAAA,CAAA,WAAA,GAAW,IAAjD;AAAA,KAAA;AAA6E,GAA3F,EAAwE,YAAxE,CATJ,EAWI,YAAA,CAKM,KALN,EAAA,UAAA,EAKM,C,gBAJF,YAAA,CAGC,QAHD,EAGC;AAfT,2BAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAYyB,MAAA,CAAA,MAAA,GAAM,MAZ/B;AAAA,KAAA;AAeS,GAHD,E,CACN,U,EACA,U,CAFM,E;;AAAA,G,mBAAiB,MAAA,CAAA,M,GAIf,CALN,CAXJ,EAkBI,YAAA,CAAe,sBAAf,CAlBJ,CAAA,E;;AAAA,G","sourcesContent":["<template>\n    <p>{{ languageData.title }}</p>\n    <LoginModal v-if=\"isOpenModal\" v-on:status:close=\"changeListener\"/>\n    <router-link to=\"/\">Homepage</router-link>\n    <router-link to=\"/contact\">Contact Page</router-link>\n    <router-link to=\"/multi\">Multiselect</router-link>\n    <!-- <select name=\"language\" v-model=\"currentLanguage\">\n        <option v-for=\"lang of languages\" :value=\"lang\" :key=\"lang\">{{ lang }}</option>\n    </select> -->\n\n    <button @click=\"isOpenModal ? isOpenModal = false : isOpenModal = true\">Open Modal</button>\n\n    <div class=\"locale-changer\">\n        <select v-model=\"locale\">\n  <option value=\"en\">en</option>\n  <option value=\"tr\">tr</option>\n</select>\n    </div>\n\n    <router-view />\n</template>\n\n<script>\nimport {useStore} from 'vuex';\nimport LoginModal from '../modal/LoginModal.vue';\nimport {watch, ref} from 'vue';\nimport { useI18n } from 'vue-i18n'\n\nexport default {\n    components: {\n        LoginModal,\n\n    },\n    setup() {\n        const store = useStore();\n        let languages = store.state.languages;\n        let currentLanguage = ref(store.state.currentLanguage);\n        let isOpenModal = ref(false);\n        let languageData = store.state.languageData.navigationBar[store.state.currentLanguage]\n\n        watch(currentLanguage, (state) => {\n            store.commit('setLanguage', state);\n            languageData = store.state.languageData.navigationBar[store.state.currentLanguage]\n        })\n\n        const { t, locale } = useI18n({ useScope: 'global' })\n\n        locale.value = 'en' // change!\n\n        return {\n            languages,\n            currentLanguage,\n            languageData,\n            isOpenModal,\n            t,\n            locale\n        }\n    },\n    methods: {\n        changeListener() {\n            this.isOpenModal = false\n        }\n    }\n}\n</script>"],"sourceRoot":""}]}