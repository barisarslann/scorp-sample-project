{"remainingRequest":"/Users/barisarslan/Desktop/scorp-project/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/barisarslan/Desktop/scorp-project/src/components/partials/Nav.vue?vue&type=template&id=06eab996","dependencies":[{"path":"/Users/barisarslan/Desktop/scorp-project/src/components/partials/Nav.vue","mtime":1627820447797},{"path":"/Users/barisarslan/Desktop/scorp-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/barisarslan/Desktop/scorp-project/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/barisarslan/Desktop/scorp-project/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/barisarslan/Desktop/scorp-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/barisarslan/Desktop/scorp-project/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:PHA+e3sgbGFuZ3VhZ2VEYXRhLnRpdGxlIH19PC9wPgogICAgPHA+e3sgdCgnaGVsbG8nKSB9fTwvcD4KICAgIDxMb2dpbk1vZGFsIHYtaWY9ImlzT3Blbk1vZGFsIiB2LW9uOnN0YXR1czpjbG9zZT0iY2hhbmdlTGlzdGVuZXIiLz4KICAgIDxzZWxlY3QgbmFtZT0ibGFuZ3VhZ2UiIHYtbW9kZWw9IiRpMThuLmxvY2FsZSI+CiAgICAgICAgPG9wdGlvbiB2LWZvcj0ibGFuZyBvZiBsYW5ndWFnZXMiIDp2YWx1ZT0ibGFuZyIgOmtleT0ibGFuZyI+e3sgbGFuZyB9fTwvb3B0aW9uPgogICAgPC9zZWxlY3Q+CgogICAgPGJ1dHRvbiBAY2xpY2s9ImlzT3Blbk1vZGFsID8gaXNPcGVuTW9kYWwgPSBmYWxzZSA6IGlzT3Blbk1vZGFsID0gdHJ1ZSI+T3BlbiBNb2RhbDwvYnV0dG9uPg=="},{"version":3,"sources":["/Users/barisarslan/Desktop/scorp-project/src/components/partials/Nav.vue"],"names":[],"mappings":"AACA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACllF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAER,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/barisarslan/Desktop/scorp-project/src/components/partials/Nav.vue","sourceRoot":"","sourcesContent":["<template>\n    <p>{{ languageData.title }}</p>\n    <p>{{ t('hello') }}</p>\n    <LoginModal v-if=\"isOpenModal\" v-on:status:close=\"changeListener\"/>\n    <select name=\"language\" v-model=\"$i18n.locale\">\n        <option v-for=\"lang of languages\" :value=\"lang\" :key=\"lang\">{{ lang }}</option>\n    </select>\n\n    <button @click=\"isOpenModal ? isOpenModal = false : isOpenModal = true\">Open Modal</button>\n</template>\n\n<script>\nimport {useStore} from 'vuex';\nimport LoginModal from '../modal/LoginModal.vue';\nimport {watch, ref} from 'vue';\nimport { useI18n } from 'vue-i18n'\n\nexport default {\n    components: {\n        LoginModal\n    },\n    setup() {\n        const store = useStore();\n        let languages = store.state.languages;\n        let currentLanguage = ref(store.state.currentLanguage);\n        let isOpenModal = ref(false);\n        let languageData = store.state.languageData.contactPage[store.state.currentLanguage]\n\n        watch(currentLanguage, (state) => {\n            store.commit('setLanguage', state);\n            languageData = store.state.languageData.contactPage[store.state.currentLanguage]\n        })\n\n        const { t } = useI18n({\n            inheritLocale: true,\n            useScope: 'local'\n        })\n\n        return {\n            languages,\n            currentLanguage,\n            languageData,\n            isOpenModal,\n            t\n        }\n    },\n    methods: {\n        changeListener() {\n            this.isOpenModal = false\n        }\n    }\n}\n</script>"]}]}