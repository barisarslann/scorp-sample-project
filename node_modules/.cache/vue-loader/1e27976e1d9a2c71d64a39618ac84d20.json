{"remainingRequest":"/Users/barisarslan/Desktop/vue-sample-project/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/barisarslan/Desktop/vue-sample-project/src/components/ContactPage.vue?vue&type=style&index=0&id=629aaef1&lang=css","dependencies":[{"path":"/Users/barisarslan/Desktop/vue-sample-project/src/components/ContactPage.vue","mtime":1629381264824},{"path":"/Users/barisarslan/Desktop/vue-sample-project/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/barisarslan/Desktop/vue-sample-project/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/barisarslan/Desktop/vue-sample-project/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/barisarslan/Desktop/vue-sample-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/barisarslan/Desktop/vue-sample-project/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgogICAgQGltcG9ydCB1cmwoJy4uL2Fzc2V0cy9Db250YWN0UGFnZS5zY3NzJyk7Cgo="},{"version":3,"sources":["/Users/barisarslan/Desktop/vue-sample-project/src/components/ContactPage.vue"],"names":[],"mappings":";;IA4II,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/barisarslan/Desktop/vue-sample-project/src/components/ContactPage.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"container contact-page\">\n        <h1>{{ t('Contact.title') }}</h1>\n        <div class=\"contact-form\">\n            <input type=\"text\" v-model=\"nameComp\" placeholder=\"Name\">\n            <input type=\"email\" v-model=\"emailComp\" placeholder=\"Email\">\n            <input type=\"text\" v-model=\"formData.phonenumber\" placeholder=\"Phone Number\">\n            <textarea name=\"message\" v-model=\"formData.text\" placeholder=\"Message\" rows=\"1\"></textarea>\n            <input type=\"text\" v-model=\"search\" @click=\"openCountryList\">\n            <ul class=\"country-list\" v-if=\"changeOpenCountryList\">\n                <li v-for=\"country in searchedCountry\" @click=\"selectCountry(country.id); changeOpenCountryList = false\" :key=\"country.id\" class=\"country-list-item\">{{ country.name }}</li>\n            </ul>\n            <button @click=\"sendForm\">Send</button>\n        </div>\n    </div>\n\n</template>\n\n<script>\nimport axios from 'axios'\nimport { useI18n } from 'vue-i18n'\nimport { useStore } from 'vuex'\nimport { computed, watch, ref } from 'vue'\n\nexport default {\n    setup() {\n        let formData = {\n            name: '',\n            email: '',\n            phonenumber: '',\n            text: '',\n            country_code: ''\n        }\n        let changeOpenCountryList = ref(false)\n        let search = ref('')\n        let searchedCountry = ref([])\n\n        const countryList = [\n            { id: \"TR\", name: \"Turkey\" },\n            { id: \"US\", name: \"United States of America\" },\n            { id: \"GB\", name: \"United Kingdom\" },\n            { id: \"DE\", name: \"Germany\" },\n            { id: \"SE\", name: \"Sweden\" },\n            { id: \"KE\", name: \"Kenya\" },\n            { id: \"BR\", name: \"Brazil\" },\n            { id: \"ZW\", name: \"Zimbabwe\" }\n        ]\n\n        function filterCountry(search) {\n            if(!search) {\n                return []\n            }\n            return countryList.filter((country) => {\n                return country.name.toLowerCase().indexOf(search.toLowerCase()) == 0\n            })\n        }\n\n        function selectCountry(id) {\n            let country = countryList.filter((country) => {\n                return country.id == id\n            })[0]\n            search.value = country.name\n            formData.country_code = country.id\n        }\n\n        function openCountryList() {\n            this.changeOpenCountryList = true;\n        }\n\n        watch(search, (newValue) => {\n            searchedCountry.value = filterCountry(newValue)\n        })\n\n        function sendForm() {\n            if(store.state.user.email) {\n                formData.email = store.state.user.email\n                formData.name = store.state.user.name\n            }\n            axios.post('http://localhost:8080/form', formData).then((response) => {\n                console.log(response.data);\n            })\n        }\n\n        const store = useStore()\n\n        const emailComp = computed({\n            get: () => {\n                if (store.state.user.name) {\n                    return store.state.user.email\n                }\n\n                return formData.email\n            },\n            set: val => {\n                formData.email = val\n                if(store.state.user.name) {\n                    store.commit('setEmail', val)\n                }\n            }\n        })\n        const nameComp = computed({\n            get: () => {\n                if (store.state.user.name) {\n                    return store.state.user.name\n                }\n\n                return formData.name\n            },\n            set: val => {\n                formData.name = val\n                if(store.state.user.name) {\n                    store.commit('setName', val)\n                }\n            }\n        })\n\n        const { t } = useI18n({\n            inheritLocale: true,\n            useScope: 'local'\n        })\n\n        return {\n            formData,\n            sendForm,\n            t,\n            emailComp,\n            nameComp,\n            search,\n            searchedCountry,\n            selectCountry,\n            openCountryList,\n            changeOpenCountryList\n        }\n    },\n}\n</script>\n\n\n<style>\n\n    @import url('../assets/ContactPage.scss');\n\n</style>"]}]}